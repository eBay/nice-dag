"use strict";(self.webpackChunkecdx=self.webpackChunkecdx||[]).push([[957],{2957:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>p,contentTitle:()=>c,default:()=>u,frontMatter:()=>d,metadata:()=>l,toc:()=>s});var a=n(7462),r=n(3366),o=(n(7294),n(3905)),i=["components"],d={sidebar_position:5},c="Drag And Drop (Node)",l={unversionedId:"tutorial-react/node-drag-drop",id:"tutorial-react/node-drag-drop",title:"Drag And Drop (Node)",description:"To enable DnD support, we need to create an editable DAG view. The editable DAG example extends Read-Only DAG.",source:"@site/docs/tutorial-react/node-drag-drop.md",sourceDirName:"tutorial-react",slug:"/tutorial-react/node-drag-drop",permalink:"/nice-dag/docs/tutorial-react/node-drag-drop",editUrl:"https://github.com/eBay/nice-dag/tree/nice-dag-docusaurus/docs/tutorial-react/node-drag-drop.md",tags:[],version:"current",sidebarPosition:5,frontMatter:{sidebar_position:5},sidebar:"tutorialSidebar",previous:{title:"Render Edge",permalink:"/nice-dag/docs/tutorial-react/render-edge"},next:{title:"Drag And Drop (Edge)",permalink:"/nice-dag/docs/tutorial-react/edge-drag-drop"}},p={},s=[{value:"Step 1: Add <code>editable</code> to <code>useNiceDag</code> hook",id:"step-1-add-editable-to-usenicedag-hook",level:2},{value:"Step 2: Add Dragging&amp;Dropping event listener",id:"step-2-add-draggingdropping-event-listener",level:2}],g={toc:s};function u(e){var t=e.components,n=(0,r.Z)(e,i);return(0,o.kt)("wrapper",(0,a.Z)({},g,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"drag-and-drop-node"},"Drag And Drop (Node)"),(0,o.kt)("p",null,"To enable ",(0,o.kt)("strong",{parentName:"p"},"DnD")," support, we need to create an editable DAG view. The editable DAG example extends ",(0,o.kt)("a",{parentName:"p",href:"./read-only-dag"},"Read-Only DAG"),"."),(0,o.kt)("h2",{id:"step-1-add-editable-to-usenicedag-hook"},"Step 1: Add ",(0,o.kt)("inlineCode",{parentName:"h2"},"editable")," to ",(0,o.kt)("inlineCode",{parentName:"h2"},"useNiceDag")," hook"),(0,o.kt)("p",null,"To make the DAG view editable is pretty simple. You can add a boolean parameter ",(0,o.kt)("inlineCode",{parentName:"p"},"editable")," to the ",(0,o.kt)("a",{parentName:"p",href:"/nice-dag/docs/api-ref/useNiceDag"},"useNiceDag")," hook. Besides, you need to have a React hook which should call ",(0,o.kt)("a",{parentName:"p",href:"/nice-dag/docs/api-ref/nice-dag#startediting"},"startEditing()")," because Nice-DAG disables edit function in default."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-jsx"},'export function MyFirstDag() {\n  //call useNiceDag\n  const { niceDagEl, render, niceDag } = useNiceDag({\n    initNodes: NodeData,\n    editable: true,\n  });\n\n  useEffect(() => {\n    if (niceDag) {\n      niceDag.startEditing(); //MUST call startEditing before edit DAG\n    }\n  }, [niceDag]);\n\n  return (\n    <div>\n      <div className="my-first-dag" ref={niceDagEl} />\n      {render()}\n    </div>\n  );\n}\n')),(0,o.kt)("h2",{id:"step-2-add-draggingdropping-event-listener"},"Step 2: Add Dragging&Dropping event listener"),(0,o.kt)("p",null,"To make the node movable, you need to adapt the method signature of ",(0,o.kt)("inlineCode",{parentName:"p"},"renderNode")," by add ",(0,o.kt)("inlineCode",{parentName:"p"},"niceDag")," parameter."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-jsx"},"function renderNode({ node, niceDag }) {\n  return <SampleNode node={node} niceDag={niceDag} />;\n}\n")),(0,o.kt)("p",null,"After then, you need to pass ",(0,o.kt)("inlineCode",{parentName:"p"},"niceDag")," to the node component."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-jsx"},'import { useNiceDag, useNiceDagNode } from "@ebay/nice-dag-react";\n\nfunction SampleNode({ node, niceDag }) {\n  const { startNodeDragging } = useNiceDagNode({ node, niceDag }); //call nice dag hook to get the startNodeDragging method\n  return (\n    <div className="my-first-dag-node">\n      <span onMouseDown={startNodeDragging}>{node.id}</span>\n    </div>\n  );\n}\n')),(0,o.kt)("p",null,"As the code shows, the event listener ",(0,o.kt)("a",{parentName:"p",href:"/nice-dag/docs/api-ref/nice-dag#startnodedragging"},"startNodeDragging")," is returned by ",(0,o.kt)("a",{parentName:"p",href:"/nice-dag/docs/api-ref/useNiceDagNode"},"useNiceDagNode")," hook so that you need to import it from ",(0,o.kt)("inlineCode",{parentName:"p"},"@ebay/nice-dag-react"),". After then, you need to bind the event listener to ",(0,o.kt)("inlineCode",{parentName:"p"},"onMouseDown")," of the target DOM which should be clickable for movement. "),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Notes:")),(0,o.kt)("p",null,"The ",(0,o.kt)("inlineCode",{parentName:"p"},"onMouseDown")," listener should not be added to the top-level container of node but a child DOM node in order to avoid events conflicts. For example, a child DOM node for node deleting can not response if the top-level container is added ",(0,o.kt)("inlineCode",{parentName:"p"},"onMouseDown")," event."),(0,o.kt)("p",null,"For this sample, we need to adapt the ",(0,o.kt)("inlineCode",{parentName:"p"},"<span>")," size by given a css class."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-css"},".my-first-dag-node > span {\n  display: block;\n  height: 100%;\n  width: 100%;\n}\n")))}u.isMDXComponent=!0},3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>u});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function d(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var c=a.createContext({}),l=function(e){var t=a.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},p=function(e){var t=l(e.components);return a.createElement(c.Provider,{value:t},e.children)},s={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},g=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,o=e.originalType,c=e.parentName,p=d(e,["components","mdxType","originalType","parentName"]),g=l(n),u=r,m=g["".concat(c,".").concat(u)]||g[u]||s[u]||o;return n?a.createElement(m,i(i({ref:t},p),{},{components:n})):a.createElement(m,i({ref:t},p))}));function u(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=n.length,i=new Array(o);i[0]=g;var d={};for(var c in t)hasOwnProperty.call(t,c)&&(d[c]=t[c]);d.originalType=e,d.mdxType="string"==typeof e?e:r,i[1]=d;for(var l=2;l<o;l++)i[l]=n[l];return a.createElement.apply(null,i)}return a.createElement.apply(null,n)}g.displayName="MDXCreateElement"}}]);